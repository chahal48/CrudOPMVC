@model CrudOPMVC.Models.ContactModel

@{
    ViewBag.Title = "AddContact";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <br />
    <h2>Add Contact</h2>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.fName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.LabelFor(model => model.lName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.lName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.emailAddr, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.emailAddr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emailAddr, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.LabelFor(model => model.ProfessionID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ProfessionID, ViewBag.itemList as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProfessionID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="row">
                <div class="col-md-5">
                    @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                    @Html.EnumDropDownListFor(model => model.Category, "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="row">
                <div class="col-md-8"></div>
                <div class="col-md-offset-2 col-md-3">
                    <input type="submit" value="Save" class="btn btn-outline-success" />
                    @Html.ActionLink("Cancel", "GetAllContacts", "Contact", new { @class = "btn btn-outline-info" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="color:darkred">
                @ViewBag.Message

            </div>
        </div>
    </div>

}

<script src="~/Content/jquery.min.js"></script>
<script src="~/Content/jquery.validate.min.js"></script>
<script src="~/Content/jquery.validate.unobtrusive.min.js"></script>

